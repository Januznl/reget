project_name: reget
release:
  github:
    owner: Januznl
    name: reget
  name_template: '{{.Tag}}'
builds:
  - id: reget
    goos:
      - linux
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
      - linux_arm_6
      - linux_arm_7
      - linux_arm64
    dir: .
    main: .
    binary: reget
    builder: go
    mod_timestamp: '{{ .CommitTimestamp }}'
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    replacements:
      "386": i386
      amd64: x86_64
      darwin: Darwin
      linux: Linux
      windows: Windows
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: README.md
      - src: LICENSE
snapshot:
  name_template: '{{ .Tag }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - januznl/reget:{{ .Version }}-amd64
      - januznl/reget:latest-amd64
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
  - goos: linux
    goarch: arm64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - januznl/reget:{{ .Version }}-arm64v8
      - januznl/reget:latest-arm64v8
    build_flag_templates:
      - --platform=linux/arm64/v8
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
  - goos: linux
    goarch: arm
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - januznl/reget:{{ .Version }}-armv6
      - januznl/reget:latest-armv6
    build_flag_templates:
      - --platform=linux/arm/v6
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
  - goos: linux
    goarch: arm
    goarm: "7"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - januznl/reget:{{ .Version }}-armv7
      - januznl/reget:latest-armv7
    build_flag_templates:
      - --platform=linux/arm/v7
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
docker_manifests:
  - name_template: januznl/reget:{{ .Version }}
    image_templates:
      - januznl/reget:{{ .Version }}-amd64
      - januznl/reget:{{ .Version }}-arm64v8
      - januznl/reget:{{ .Version }}-armv6
      - januznl/reget:{{ .Version }}-armv7
    use: docker
  - name_template: januznl/reget:latest
    image_templates:
      - januznl/reget:latest-amd64
      - januznl/reget:latest-arm64v8
      - januznl/reget:latest-armv6
      - januznl/reget:latest-armv7
    use: docker
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
  sort: asc
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod download
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
